) %>% mutate_if(is.numeric, round, digits = 2) %>%
rename("Fecha" = date)
plot(iris$Sepal.Length)
install.packages("summarytools")
install.packages("summarytools")
library(gt)
# Define the start and end dates for the data range
start_date <- "2010-06-07"
end_date <- "2010-06-14"
# Create a gt table based on preprocessed
# `sp500` table data
sp500 |>
dplyr::filter(date >= start_date & date <= end_date) |>
dplyr::select(-adj_close) |>
gt() |>
tab_header(
title = "S&P 500",
subtitle = glue::glue("{start_date} to {end_date}")
) |>
fmt_currency() |>
fmt_date(columns = date, date_style = "wd_m_day_year") |>
fmt_number(columns = volume, suffixing = TRUE)
install.packages("gtExtras")
install.packages("kableExtra")
remotes::install_github("r-earthengine/rgeeExtra")
install.packages("remotes")
remotes::install_github("r-earthengine/rgeeExtra")
library(rgee)
library(rgeeExtra)
extra_Initialize()
reticulate::repl_python()
import ee
ee.Initialize(project = "ee-bryan1qr")
exit
ee$Initialize()
ee_Initialize(project = "ee-bryan1qr")
ee$Initialize()
ee_check()
ee_check_credentials()
ee_Initialize(drive = T)
ee_check_credentials()
img <- ee$Image("LANDSAT/LC08/C02/T1_L2/LC08_007067_20140822")$
normalizedDifference(c("SR_B5", "SR_B4"))$
pow(2)
# Visualize squared NDVI on map
Map$centerObject(img)
Map$addLayer(
eeObject = img,
visParams = list(
min = 0,
max = 0.2,
palette = c("brown", "yellow", "green")
),
name = "Squared NDVI")
# Compute squared NDVI from Landsat 8 image
img <- ee$Image("LANDSAT/LC08/C02/T1_L2/LC08_007067_20140822")
ndvi <- ((img[["SR_B5"]] - img[["SR_B4"]]) / (img[["SR_B5"]] + img[["SR_B4"]])) ** 2
names(ndvi) <- "NDVI"
# Visualize squared NDVI on map
Map$centerObject(ndvi)
Map$addLayer(
eeObject = ndvi,
visParams = list(
min = 0,
max = 0.2,
palette = c("brown", "yellow", "green")
),
name = "Squared NDVI"
)
#| fig-height: 3.6
#| fig-width: 7
source("Scripts/AQI.R")
aqi_index(df$eca)
library(tidyverse)
#| fig-height: 3.6
#| fig-width: 7
source("Scripts/AQI.R")
aqi_index(df$eca)
head(aqi_index(df$eca))
df$eca
df$eca %>%
mutate(fecha = as.Date(fecha, format = "%d-%B"),
fecha = format(fecha, format = "%d-%m")) %>%
mutate_if(is.numeric, round, digits = 1) %>%
pivot_longer(
cols = -fecha,
names_to = "Parámetros",
values_to = "val") %>%
pivot_wider(names_from = fecha, values_from = val) %>%
mutate(Parámetros = parametros,
ECA = c(100, 50, 200, 250,
150, 30000, 10000, 100)) %>%
full_join(oms) %>%
slice(4:7) %>%
gt(groupname_col = "name", rowname_col = "Fecha") %>%
tab_header(title = md("**Hoja de datos de parámetros de calidad de aire y meteorológicos**")) %>%
tab_options(
table.font.size = px(10),
column_labels.font.size = px(10),
data_row.padding = px(0.3)) %>%
cols_width(Fecha ~ px(50),everything() ~ px(38))
library(tidyverse)
library(openair)
library(openxlsx)
library(zoo)
library(ggthemes)
library(ggforce)
library(patchwork)
library(ggrepel)
library(glue)
library(kableExtra)
library(gt)
source("Scripts/ECA_mejorado.R")
df <- ECA(meteo = "input/CR1000_JULIO_2024.csv",
gases = "input/gases_odria_agosto.csv",
pm = "input/1405A227561402_2024-08-01_09-11-26.csv",
fecha_inicio = "2024-07-17",
fecha_fin = "2024-07-31",
estacion = "vigil",
tipo = "lista")
source("Scripts/data_cruda_mejorada.R")
cruda2 <- cruda(meteo = "input/CR1000_JULIO_2024.csv",
gases = "input/gases_odria_agosto.csv",
pm = "input/1405A227561402_2024-08-01_09-11-26.csv",
fecha_inicio = "2024-07-17",
fecha_fin = "2024-07-31",
estacion = "vigil",
tipo = "save")
meses <- c("January" = "enero",
"February" = "febrero",
"March" = "marzo",
"April" = "abril",
"May" = "mayo",
"June" = "junio",
"July" = "julio",
"August" = "agosto",
"September" = "septiembre",
"October" = "octubre",
"November" = "noviembre",
"December" = "diciembre")
fech <- meses[[format(min(df$df$date),
format = "%B")]]
cod <- "EMCA - 02"
df$eca %>%
mutate(fecha = as.Date(fecha, format = "%d-%B"),
fecha = format(fecha, format = "%d-%m")) %>%
mutate_if(is.numeric, round, digits = 1) %>%
pivot_longer(
cols = -fecha,
names_to = "Parámetros",
values_to = "val") %>%
pivot_wider(names_from = fecha, values_from = val) %>%
mutate(Parámetros = parametros,
ECA = c(100, 50, 200, 250,
150, 30000, 10000, 100)) %>%
full_join(oms) %>%
slice(4:7) %>%
gt(groupname_col = "name", rowname_col = "Fecha") %>%
tab_header(title = md("**Hoja de datos de parámetros de calidad de aire y meteorológicos**")) %>%
tab_options(
table.font.size = px(10),
column_labels.font.size = px(10),
data_row.padding = px(0.3)) %>%
cols_width(Fecha ~ px(50),everything() ~ px(38))
df$eca %>%
mutate(fecha = as.Date(fecha, format = "%d-%B"),
fecha = format(fecha, format = "%d-%m")) %>%
mutate_if(is.numeric, round, digits = 1) %>%
pivot_longer(
cols = -fecha,
names_to = "Parámetros",
values_to = "val") %>%
pivot_wider(names_from = fecha, values_from = val) %>%
mutate(Parámetros = parametros,
ECA = c(100, 50, 200, 250,
150, 30000, 10000, 100)) %>%
full_join(oms) %>%
slice(4:7) %>%
gt(groupname_col = "name", rowname_col = "Parámetros") %>%
tab_header(title = md("**Hoja de datos de parámetros de calidad de aire y meteorológicos**")) %>%
tab_options(
table.font.size = px(10),
column_labels.font.size = px(10),
data_row.padding = px(0.3)) %>%
cols_width(Fecha ~ px(50),everything() ~ px(38))
head(df$eca %>%
mutate(fecha = as.Date(fecha, format = "%d-%B"),
fecha = format(fecha, format = "%d-%m")) %>%
mutate_if(is.numeric, round, digits = 1) %>%
pivot_longer(
cols = -fecha,
names_to = "Parámetros",
values_to = "val") %>%
pivot_wider(names_from = fecha, values_from = val) %>%
mutate(Parámetros = parametros,
ECA = c(100, 50, 200, 250,
150, 30000, 10000, 100)) %>%
full_join(oms) %>%
slice(4:7))
parametros <- c(
pm10 = "PM10",
pm25 = "PM2.5",
no2 = "NO2",
so2 = 'SO2',
h2s = "H2S",
co_1 = "CO (8h)",
co = "CO (1h)",
o3 = "O3")
oms <- data.frame(
Parámetros = c(
"PM10", "PM2.5", "O3","NO2",
"SO2", "CO (1h)","CO (8h)"),
OMS  = c(
15, 45, 100, 25, 40, 35000,10000
))
df$eca %>%
mutate(fecha = as.Date(fecha, format = "%d-%B"),
fecha = format(fecha, format = "%d-%m")) %>%
mutate_if(is.numeric, round, digits = 1) %>%
pivot_longer(
cols = -fecha,
names_to = "Parámetros",
values_to = "val") %>%
pivot_wider(names_from = fecha, values_from = val) %>%
mutate(Parámetros = parametros,
ECA = c(100, 50, 200, 250,
150, 30000, 10000, 100)) %>%
full_join(oms) %>%
slice(4:7) %>%
gt(groupname_col = "name", rowname_col = "Parámetros") %>%
tab_header(title = md("**Hoja de datos de parámetros de calidad de aire y meteorológicos**")) %>%
tab_options(
table.font.size = px(10),
column_labels.font.size = px(10),
data_row.padding = px(0.3)) %>%
cols_width(Fecha ~ px(50),everything() ~ px(38))
df$eca
df$eca %>%
mutate(fecha = as.Date(fecha, format = "%d-%B"),
fecha = format(fecha, format = "%d-%m")) %>%
mutate_if(is.numeric, round, digits = 1) %>%
pivot_longer(
cols = -fecha,
names_to = "Parámetros",
values_to = "val") %>%
pivot_wider(names_from = fecha, values_from = val) %>%
mutate(Parámetros = parametros,
ECA = c(100, 50, 200, 250,
150, 30000, 10000, 100))
df$eca %>%
mutate(fecha = as.Date(fecha, format = "%d-%B"),
fecha = format(fecha, format = "%d-%m")) %>%
mutate_if(is.numeric, round, digits = 1) %>%
pivot_longer(
cols = -fecha,
names_to = "Parámetros",
values_to = "val") %>%
pivot_wider(names_from = fecha, values_from = val) %>%
mutate(Parámetros = parametros,
ECA = c(100, 50, 200, 250,
150, 30000, 10000, 100)) %>%
full_join(oms)
df$eca %>%
mutate(fecha = as.Date(fecha, format = "%d-%B"),
fecha = format(fecha, format = "%d-%m")) %>%
mutate_if(is.numeric, round, digits = 1) %>%
pivot_longer(
cols = -fecha,
names_to = "Parámetros",
values_to = "val") %>%
pivot_wider(names_from = fecha, values_from = val) %>%
mutate(Parámetros = parametros,
ECA = c(100, 50, 200, 250,
150, 30000, 10000, 100)) %>%
full_join(oms) %>%
slice(4:7)
df$eca %>%
mutate(fecha = as.Date(fecha, format = "%d-%B"),
fecha = format(fecha, format = "%d-%m")) %>%
mutate_if(is.numeric, round, digits = 1) %>%
pivot_longer(
cols = -fecha,
names_to = "Parámetros",
values_to = "val") %>%
pivot_wider(names_from = fecha, values_from = val) %>%
mutate(Parámetros = parametros,
ECA = c(100, 50, 200, 250,
150, 30000, 10000, 100)) %>%
full_join(oms) %>%
slice(4:7) %>%
gt(groupname_col = "name", rowname_col = "Parámetros")
df$eca %>%
mutate(fecha = as.Date(fecha, format = "%d-%B"),
fecha = format(fecha, format = "%d-%m")) %>%
mutate_if(is.numeric, round, digits = 1) %>%
pivot_longer(
cols = -fecha,
names_to = "Parámetros",
values_to = "val") %>%
pivot_wider(names_from = fecha, values_from = val) %>%
mutate(Parámetros = parametros,
ECA = c(100, 50, 200, 250,
150, 30000, 10000, 100)) %>%
full_join(oms) %>%
slice(4:7) %>%
gt(groupname_col = "name", rowname_col = "Parámetros") %>%
tab_header(title = md("**Hoja de datos de parámetros de calidad de aire y meteorológicos**"))
df$eca %>%
mutate(fecha = as.Date(fecha, format = "%d-%B"),
fecha = format(fecha, format = "%d-%m")) %>%
mutate_if(is.numeric, round, digits = 1) %>%
pivot_longer(
cols = -fecha,
names_to = "Parámetros",
values_to = "val") %>%
pivot_wider(names_from = fecha, values_from = val) %>%
mutate(Parámetros = parametros,
ECA = c(100, 50, 200, 250,
150, 30000, 10000, 100)) %>%
full_join(oms) %>%
slice(4:7) %>%
gt(groupname_col = "name", rowname_col = "Parámetros") %>%
tab_header(title = md("**Hoja de datos de parámetros de calidad de aire y meteorológicos**")) %>%
tab_options(
table.font.size = px(10),
column_labels.font.size = px(10),
data_row.padding = px(0.3))
df$eca %>%
mutate(fecha = as.Date(fecha, format = "%d-%B"),
fecha = format(fecha, format = "%d-%m")) %>%
mutate_if(is.numeric, round, digits = 1) %>%
pivot_longer(
cols = -fecha,
names_to = "Parámetros",
values_to = "val") %>%
pivot_wider(names_from = fecha, values_from = val) %>%
mutate(Parámetros = parametros,
ECA = c(100, 50, 200, 250,
150, 30000, 10000, 100)) %>%
full_join(oms) %>%
slice(4:7) %>%
gt(groupname_col = "name", rowname_col = "Parámetros") %>%
tab_header(title = md("**Hoja de datos de parámetros de calidad de aire y meteorológicos**")) %>%
tab_options(
table.font.size = px(10),
column_labels.font.size = px(10),
data_row.padding = px(0.3)) %>%
cols_width(everything() ~ px(38))
df$eca %>%
mutate(fecha = as.Date(fecha, format = "%d-%B"),
fecha = format(fecha, format = "%d-%m")) %>%
mutate_if(is.numeric, round, digits = 1) %>%
pivot_longer(
cols = -fecha,
names_to = "Parámetros",
values_to = "val") %>%
pivot_wider(names_from = fecha, values_from = val) %>%
mutate(Parámetros = parametros,
ECA = c(100, 50, 200, 250,
150, 30000, 10000, 100)) %>%
full_join(oms) %>%
slice(4:7) %>%
gt(groupname_col = "name", rowname_col = "Parámetros") %>%
tab_header(title = md("**Hoja de datos de parámetros de calidad de aire y meteorológicos**")) %>%
tab_options(
table.font.size = px(10),
column_labels.font.size = px(10),
data_row.padding = px(0.3)) %>%
cols_width(everything() ~ px(25))
df$eca %>%
mutate(fecha = as.Date(fecha, format = "%d-%B"),
fecha = format(fecha, format = "%d-%m")) %>%
mutate_if(is.numeric, round, digits = 1) %>%
pivot_longer(
cols = -fecha,
names_to = "Parámetros",
values_to = "val") %>%
pivot_wider(names_from = fecha, values_from = val) %>%
mutate(Parámetros = parametros,
ECA = c(100, 50, 200, 250,
150, 30000, 10000, 100)) %>%
full_join(oms) %>%
slice(4:7) %>%
gt(groupname_col = "name", rowname_col = "Parámetros") %>%
tab_header(title = md("**Hoja de datos de parámetros de calidad de aire y meteorológicos**")) %>%
tab_options(
table.font.size = px(10),
column_labels.font.size = px(10),
data_row.padding = px(0.3)) %>%
cols_width(everything() ~ px(25))
source("Scripts/data_cruda.R")
cruda2 <- cruda(meteo = "input/CR1000_JULIO_2024.csv",
gases = "input/gases_odria_agosto.csv",
pm = "input/1405A227561402_2024-08-01_09-11-26.csv",
fecha_inicio = "2024-07-17",
fecha_fin = "2024-07-31",
estacion = "vigil",
tipo = "save")
library(tidyverse)
library(openair)
library(openxlsx)
library(zoo)
library(ggthemes)
library(ggforce)
library(patchwork)
library(ggrepel)
library(glue)
library(kableExtra)
library(gt)
source("Scripts/ECA.R")
df <- ECA(meteo = "input/CR1000_JULIO_2024.csv",
gases = "input/gases_odria_agosto.csv",
pm = "input/1405A227561402_2024-08-01_09-11-26.csv",
fecha_inicio = "2024-07-17",
fecha_fin = "2024-07-31",
estacion = "vigil",
tipo = "lista")
source("Scripts/data_cruda.R")
cruda2 <- cruda(meteo = "input/CR1000_JULIO_2024.csv",
gases = "input/gases_odria_agosto.csv",
pm = "input/1405A227561402_2024-08-01_09-11-26.csv",
fecha_inicio = "2024-07-17",
fecha_fin = "2024-07-31",
estacion = "vigil",
tipo = "save")
meses <- c("January" = "enero",
"February" = "febrero",
"March" = "marzo",
"April" = "abril",
"May" = "mayo",
"June" = "junio",
"July" = "julio",
"August" = "agosto",
"September" = "septiembre",
"October" = "octubre",
"November" = "noviembre",
"December" = "diciembre")
fech <- meses[[format(min(df$df$date),
format = "%B")]]
cod <- "EMCA - 02"
distrito <- "Alto de la Alianza"
lugar <- 'el Instituto de Educación Superior Público "Francisco  de Paula Gonzales Vigil"'
windRose(mydata = df$df, plot = F)
windRose(mydata = df$df, plot = F) -> a
a
windRose(mydata = df$df, plot = FALSE) -> a
a$data
round(a$data)
round(a$data$calm)
a$data
a$data$panel.fun
a$data$panel.fun[1]
round(a$data$panel.fun[1])
round(as.numeric(a$data$panel.fun[1]())
round(as.numeric(a$data$panel.fun[1]))
round(as.numeric(a$data$panel.fun[1]),2)
cruda2 <- cruda(meteo = "input/CR1000_JULIO_2024.csv",
gases = "input/gases_odria_agosto.csv",
pm = "input/1405A227561402_2024-08-01_09-11-26.csv",
fecha_inicio = "2024-07-17",
fecha_fin = "2024-07-31",
estacion = "vigil",
tipo = "save")
cruda2
df <- ECA(meteo = "input/CR1000_JULIO_2024.csv",
gases = "input/gases_odria_agosto.csv",
pm = "input/1405A227561402_2024-08-01_09-11-26.csv",
fecha_inicio = "2024-07-17",
fecha_fin = "2024-07-31",
estacion = "vigil",
tipo = "save")
source("Scripts/data_cruda.R")
cruda2 <- cruda(meteo = "input/CR1000_JULIO_2024.csv",
gases = "input/gases_odria_agosto.csv",
pm = "input/1405A227561402_2024-08-01_09-11-26.csv",
fecha_inicio = "2024-07-17",
fecha_fin = "2024-07-31",
estacion = "vigil_cruda",
tipo = "save")
library(gt)
source("Scripts/ECA.R")
df <- ECA(meteo = "input/CR1000_JULIO_2024.csv",
gases = "input/gases_odria_agosto.csv",
pm = "input/pm_junio.csv",
fecha_inicio = "2024-06-21",
fecha_fin = "2024-06-30",
estacion = "unanue",
tipo = "lista")
source("Scripts/data_cruda.R")
cruda2 <- cruda(meteo = "input/CR1000_JULIO_2024.csv",
gases = "input/gases_odria_agosto.csv",
pm = "input/pm_junio.csv",
fecha_inicio = "2024-06-21",
fecha_fin = "2024-06-30",
estacion = "unanue",
tipo = "save")
source("Scripts/data_cruda.R")
cruda2 <- cruda(meteo = "input/CR1000_JULIO_2024.csv",
gases = "input/gases_odria_agosto.csv",
pm = "input/pm_junio.csv",
fecha_inicio = "2024-06-21",
fecha_fin = "2024-06-30",
estacion = "unanue",
tipo = "save")
source("Scripts/data_cruda.R")
cruda2 <- cruda(meteo = "input/CR1000_JULIO_2024.csv",
gases = "input/gases_odria_agosto.csv",
pm = "input/pm_junio.csv",
fecha_inicio = "2024-06-21",
fecha_fin = "2024-06-30",
estacion = "unanue",
tipo = "save")
